[tool.poetry]
name = "enlightened-broccoli"
version = "0.1.0"
description = "Backend for Enlightened-Broccoli, a calorie and macronutrient tracking app"
authors = ["antoniouaa <antoniouaa@hotmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.6.2"
fastapi = "^0.65.1"
uvicorn = "^0.13.4"
SQLAlchemy = "^1.4.15"
bcrypt = "^3.2.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
async-exit-stack = "^1.0.1"
async_generator = "^1.10"
psycopg2 = {version = "^2.8.6", platform = "win32"}
psycopg2-binary = {version = "2.8.6", platform = "linux"}
alembic = "^1.6.4"
python-dotenv = "^0.17.1"
python-jose = "^3.2.0"
python-multipart = "^0.0.5"

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
requests = "^2.25.1"
psycopg2-binary = "^2.8.6"
pytest-cov = "^2.12.0"
coveralls = "^3.0.1"
black = "^21.5b1"
taskipy = "^1.8.1"

[tool.black]
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
    | tests
    | alembic
)/
'''

[tool.taskipy.tasks]
format = { cmd = "black .", help = "Formats the code using the Black formatter"}
test = { cmd = "pytest -vvv", help = "Runs the test suite"}
lint = { cmd = "pre-commit run --all-files", help = "Lints the code with pre-commit"}
migrate = {cmd = "alembic revision --autogenerate", help="Create a migration with alembic, optional -m message"}
upgrade = {cmd = "alembic upgrade head", help="Upgrades head to apply the most recent migration"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
